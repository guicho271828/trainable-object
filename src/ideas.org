
* WIP ideas ; not implemented yet.


TRAINABLE-OBJECT instance is funcallable with a signature

: (funcall INSTANCE INPUT &key BATCH VERBOSE &allow-other-keys).

Its behavior depends on whether INPUT is a funcallable object (a function or a funcallable-standard-object)
or an object of other types.

In the former case, a COMPOSE method is invoked on INSTANCE and INPUT.
The result should be an instance of a function or a funcallable-standard-object.

When INSTANCE and INPUT are both TRAINABLE-OBJECT instances, and are composable (e.g. two neural networks),
it should return a new TRAINABLE-OBJECT instance which represents the composed function and is trainable.

When INPUT is not a funcallable instances, it is assumed to be the data.
It invokes PREDICT method using the arguments and returns a predicted output.


(defgeneric compose  (model1 model2      &key verbose &allow-other-keys)
  (:documentation "
Compose a model MODEL1 with another upstream model MODEL2.
Returns a funcallable instance, either simply a function/closure or a merged TRAINABLE-OBJECT instance
that can be trained end-to-end (e.g. a neural network layer).
"))

